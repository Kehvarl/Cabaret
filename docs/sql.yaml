
user_types:
  - CREATE TABLE User_Types(
      id INT NOT NULL AUTO_INCREMENT,
      label VARCHAR(128),
      validated BOOL NOT NULL DEFAULT 0,
      can_masquerade BOOL NOT NULL DEFAULT 0,
      create_private BOOL NOT NULL DEFAULT 0,
      manage_rooms BOOL NOT NULL DEFAULT 0,
      manage_users BOOL NOT NULL DEFAULT 0,
      administrator BOOL NOT NULL DEFAULT 0,
      PRIMARY KEY(id)
    );

  - add_type: INSERT INTO user_types (label) VALUES (:label)
  - get_types: SELECT id, label FROM user_types;
  - get_perms: SELECT validated, can_masquerade, create_private, manage_rooms, manage_users, administrator
               FROM user_types WHERE (id == :id);

users:
  - CREATE TABLE users(
      id INT NOT NULL AUTO_INCREMENT,
      type_id INT NOT NULL,
      name VARCHAR(256) NOT NULL,
      password_hash CHAR(128) NOT NULL,
      join_date DATE NOT NULL,
      PRIMARY KEY(id),
      FOREIGN KEY (type_id) REFERENCES user_types(id)
    );

  - add_user: INSERT INTO  users (type_id, name, password_hash, join_date) VALUES (type_id, :name, :password_hash, CURDATE())
  - get_pass: SELECT id, password_hash FROM users WHERE (name == :name);
  - get_user: SELECT id, type_id, name from users WHERE (id == :id);


user_logins:
  - CREATE_TABLE user_login();

rooms:
  - CREATE_TABLE rooms(
      id INT NOT NULL AUTO_INCREMENT,
      title VARCHAR(128) NOT NULL,
      short_desc VARCHAR(256) NOT NULL,
      long_desc TEXT,
      PRIMARY KEY(id)
    );

room_users:
  - CREATE_TABLE room_users(
      id INT NOT NULL AUTO_INCREMENT,
      room_id INT NOT NULL,
      user_id INT NOT NULL,
      display_name VARCHAR(128),
      last_activity DATETIME,
      PRIMARY KEY(id),
      FOREIGN KEY(room_id) REFERENCES rooms(id),
      FOREIGN KEY(user_id) REFERENCES users(id)
      );

room_messages:
  - CREATE TABLE room_messages(
      id INT NOT NULL AUTO_INCREMENT,
      room_id INT NOT NULL,
      room_user_id INT NOT NULL,
      display_name VARCHAR(128),
      display_color VARCHAR(64),
      display_font VARCHAR(64),
      message TEXT,
      timestamp DATETIME,
      PRIMARY_KEY(id),
      FOREIGN KEY(room_user_id) REFERENCES room_use(id),
      FOREIGN KEY(room_id) REFERENCES rooms(id)
    );

  - get_messages: SELECT (display_name, display_color, display_font, message, timestamp) FROM room_messages WHERE room_id = :room_id ORDER BY id DESC LIMIT 100
  - get_messages_page:  SELECT (display_name, display_color, display_font, message, timestamp) FROM room_messages WHERE room_id = :room_id AND id < :start_id ORDER BY id DESC LIMIT 100
  - add_message: INSERT INTO room_messages(room_id, room_user_id, display_name, display_color, display_font, message, timestamp)
                       VALUES (:room_id, :room_user_id, :display_name, :display_color, :display_font, :message, CURDATETIME());
